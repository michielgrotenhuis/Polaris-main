{% extends '/layouts/theme.twig' %}

{% block body %}
    <main class="main-root">
        <div class="wrapper">
            <div class="auth-container">
                {% if message is not empty %}
                    <div class="alert alert--danger m-b-24">{{ message }}</div>
                {% endif %}
                <div class="auth-holder">
                    <h2 class="auth-holder--heading">{{ "reset_password.title" | trans }}</h2>
                    <p style="margin-top: -15px;margin-bottom: 20px;color: grey;font-size: 15px;">{{ "reset_password.desc" | trans }}</p>
                    <div class="auth-holder--form">
                        <form id="reset_password_form"
                              action="{{ routes.ajax_account_reset_password_url | preview_mode(preview_token) }}"
                              method="post">
                            {{ csrf_input() }}
                            <input type="hidden" name="preview" value="{{ preview_token }}">
                            <div class="input-wrapper m-b-24">
                                <input type="password" class="input-field"
                                       placeholder="{{ "reset_password.new_password" | trans }}"
                                       name="new_password">
                            </div>
                            <div class="input-wrapper m-b-24">
                                <input type="password" class="input-field"
                                       placeholder="{{ "reset_password.new_password_confirm" | trans }}"
                                       name="new_password_confirm">
                            </div>
                            <button type="submit"
                                    class="btn btn-fluid btn-md btn-dark m-b-24 resetPasswordBtn">{{ "reset_password.submit" | trans }}</button>
                        </form>
                        <a href="{{ routes.account_login_url | preview_mode(preview_token) }}"
                           class="btn btn-fluid btn-outline-md btn-outline btn-outline-primary">{{ "reset_password.cancel" | trans }}</a>
                    </div>
                </div>
            </div>
        </div>
    </main>
{% endblock %}

{% block title %}{{ "reset_password.title" | trans  ~ " - " ~ shop.name }}{% endblock %}

{% block js %}
    <script>
        $('.resetPasswordBtn').on('click', function (e) {
            e.preventDefault();
            e.stopPropagation();

            clearSuccesses();
            clearErrors();
            showLoading(true);

            let form = $('#reset_password_form');
            let url = form.attr('action');

            // get reset_token from url with name of reset_token
            let urlParams = new URLSearchParams(window.location.search);
            let reset_token = urlParams.get('reset_token');

            let data = {
                reset_token: reset_token,
                new_password: form.find('[name="new_password"]').val(),
                new_password_confirm: form.find('[name="new_password_confirm"]').val(),
                preview: form.find('[name="preview"]').val(),
                _token: '{{ csrf_token() }}'
            }

            ajaxRequest(url, 'POST', data, res => {
                window.location.href = res.redirect + '?preview={{ preview_token }}';
                form.find('.has-error').removeClass("has-error")

                form.prev().remove();
                form.before('<div class="alert alert--success m-b-24">' +
                    '{{ "reset_password.success_message" | trans }}' +
                    '</div>');
            }, err => {
                showLoading(false);
                if (err.responseJSON && err.responseJSON.message && !err.responseJSON.errors) {
                    form.prev().remove();
                    form.before('<div class="alert alert--danger m-b-24">' + err.responseJSON.message + '</div>');
                }
                if (err.responseJSON && err.responseJSON.errors) {
                    err.responseJSON.errors.map(err => {
                        if (err.field === "new_password") {
                            let element = $('[name="new_password"]')
                            loadValidation(element, err.title);
                        }
                        if (err.field === "new_password_confirm") {
                            let element = $('[name="new_password_confirm"]')
                            loadValidation(element, err.title);
                        }
                        if (err.field === "reset_token") {
                            form.prev().remove();
                            form.before('<div class="alert alert--danger m-b-24">[' + err.field + ']' + err.title + '</div>');
                        }
                    })
                }
            });
        })

        function loadValidation(element, title) {
            element.parent().addClass('has-error');
            element.next().remove();
            element.after('<span class="error-message">' + title + '</span>');
        }

        function clearErrors() {
            $('.alert--danger').each(function (i) {
                $(this).remove();
            })

            $('.has-error').each(function (i) {
                $(this).removeClass('has-error');
            })

            $('.error-message').each(function (i) {
                $(this).remove();
            });
        }

        function clearSuccesses() {
            $('.alert--success').each(function (i) {
                $(this).remove();
            })
        }
    </script>
{% endblock %}
